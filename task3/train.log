06/11 03:33:54 - mmengine - INFO - Config:
default_scope = 'mmdet'
default_hooks = dict(
    timer=dict(type='IterTimerHook'),
    logger=dict(type='LoggerHook', interval=5),
    param_scheduler=dict(type='ParamSchedulerHook'),
    checkpoint=dict(
        type='CheckpointHook', interval=10, max_keep_ckpts=2,
        save_best='auto'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    visualization=dict(type='DetVisualizationHook'))
env_cfg = dict(
    cudnn_benchmark=False,
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0),
    dist_cfg=dict(backend='nccl'))
vis_backends = [dict(type='LocalVisBackend')]
visualizer = dict(
    type='DetLocalVisualizer',
    vis_backends=[dict(type='LocalVisBackend')],
    name='visualizer')
log_processor = dict(type='LogProcessor', window_size=50, by_epoch=True)
log_level = 'INFO'
load_from = 'https://download.openmmlab.com/mmdetection/v3.0/rtmdet/rtmdet_tiny_8xb32-300e_coco/rtmdet_tiny_8xb32-300e_coco_20220902_112414-78e30dcc.pth'
resume = False
train_cfg = dict(
    type='EpochBasedTrainLoop',
    max_epochs=40,
    val_interval=10,
    dynamic_intervals=[(280, 1)])
val_cfg = dict(type='ValLoop')
test_cfg = dict(type='TestLoop')
param_scheduler = [
    dict(type='LinearLR', start_factor=1e-05, by_epoch=False, begin=0, end=30),
    dict(
        type='CosineAnnealingLR',
        eta_min=9.375000000000001e-06,
        begin=20,
        end=40,
        T_max=20,
        by_epoch=True,
        convert_to_iter_based=True)
]
optim_wrapper = dict(
    type='OptimWrapper',
    optimizer=dict(type='AdamW', lr=0.0001875, weight_decay=0.05),
    paramwise_cfg=dict(
        norm_decay_mult=0, bias_decay_mult=0, bypass_duplicate=True))
auto_scale_lr = dict(enable=False, base_batch_size=16)
dataset_type = 'CocoDataset'
data_root = 'balloon_dataset/'
backend_args = None
train_pipeline = [
    dict(type='LoadImageFromFile', backend_args=None),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(
        type='CachedMosaic',
        img_scale=(640, 640),
        pad_val=114.0,
        max_cached_images=20,
        random_pop=False),
    dict(
        type='RandomResize',
        scale=(1280, 1280),
        ratio_range=(0.5, 2.0),
        keep_ratio=True),
    dict(type='RandomCrop', crop_size=(640, 640)),
    dict(type='YOLOXHSVRandomAug'),
    dict(type='RandomFlip', prob=0.5),
    dict(type='Pad', size=(640, 640), pad_val=dict(img=(114, 114, 114))),
    dict(
        type='CachedMixUp',
        img_scale=(640, 640),
        ratio_range=(1.0, 1.0),
        max_cached_images=10,
        random_pop=False,
        pad_val=(114, 114, 114),
        prob=0.5),
    dict(type='PackDetInputs')
]
test_pipeline = [
    dict(type='LoadImageFromFile', backend_args=None),
    dict(type='Resize', scale=(640, 640), keep_ratio=True),
    dict(type='Pad', size=(640, 640), pad_val=dict(img=(114, 114, 114))),
    dict(
        type='PackDetInputs',
        meta_keys=('img_id', 'img_path', 'ori_shape', 'img_shape',
                   'scale_factor'))
]
train_dataloader = dict(
    batch_size=12,
    num_workers=4,
    persistent_workers=True,
    sampler=dict(type='DefaultSampler', shuffle=True),
    batch_sampler=None,
    dataset=dict(
        type='CocoDataset',
        data_root='balloon_dataset/',
        ann_file='balloon/train/balloon_train.json',
        data_prefix=dict(img='balloon/train'),
        filter_cfg=dict(filter_empty_gt=True, min_size=32),
        pipeline=[
            dict(type='LoadImageFromFile', backend_args=None),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(
                type='CachedMosaic',
                img_scale=(640, 640),
                pad_val=114.0,
                max_cached_images=20,
                random_pop=False),
            dict(
                type='RandomResize',
                scale=(1280, 1280),
                ratio_range=(0.5, 2.0),
                keep_ratio=True),
            dict(type='RandomCrop', crop_size=(640, 640)),
            dict(type='YOLOXHSVRandomAug'),
            dict(type='RandomFlip', prob=0.5),
            dict(
                type='Pad', size=(640, 640),
                pad_val=dict(img=(114, 114, 114))),
            dict(
                type='CachedMixUp',
                img_scale=(640, 640),
                ratio_range=(1.0, 1.0),
                max_cached_images=10,
                random_pop=False,
                pad_val=(114, 114, 114),
                prob=0.5),
            dict(type='PackDetInputs')
        ],
        backend_args=None,
        metainfo=dict(classes=('balloon', ), palette=[(220, 20, 60)])),
    pin_memory=False)
val_dataloader = dict(
    batch_size=1,
    num_workers=2,
    persistent_workers=True,
    drop_last=False,
    sampler=dict(type='DefaultSampler', shuffle=False),
    dataset=dict(
        type='CocoDataset',
        data_root='balloon_dataset/',
        ann_file='balloon/val/balloon_val.json',
        data_prefix=dict(img='balloon/val'),
        test_mode=True,
        pipeline=[
            dict(type='LoadImageFromFile', backend_args=None),
            dict(type='Resize', scale=(640, 640), keep_ratio=True),
            dict(
                type='Pad', size=(640, 640),
                pad_val=dict(img=(114, 114, 114))),
            dict(
                type='PackDetInputs',
                meta_keys=('img_id', 'img_path', 'ori_shape', 'img_shape',
                           'scale_factor'))
        ],
        backend_args=None,
        metainfo=dict(classes=('balloon', ), palette=[(220, 20, 60)])))
test_dataloader = dict(
    batch_size=1,
    num_workers=2,
    persistent_workers=True,
    drop_last=False,
    sampler=dict(type='DefaultSampler', shuffle=False),
    dataset=dict(
        type='CocoDataset',
        data_root='balloon_dataset/',
        ann_file='balloon/val/balloon_val.json',
        data_prefix=dict(img='balloon/val'),
        test_mode=True,
        pipeline=[
            dict(type='LoadImageFromFile', backend_args=None),
            dict(type='Resize', scale=(640, 640), keep_ratio=True),
            dict(
                type='Pad', size=(640, 640),
                pad_val=dict(img=(114, 114, 114))),
            dict(
                type='PackDetInputs',
                meta_keys=('img_id', 'img_path', 'ori_shape', 'img_shape',
                           'scale_factor'))
        ],
        backend_args=None,
        metainfo=dict(classes=('balloon', ), palette=[(220, 20, 60)])))
val_evaluator = dict(
    type='CocoMetric',
    ann_file='balloon_dataset/balloon/val/balloon_val.json',
    metric='bbox',
    format_only=False,
    backend_args=None,
    proposal_nums=(100, 1, 10))
test_evaluator = dict(
    type='CocoMetric',
    ann_file='balloon_dataset/balloon/val/balloon_val.json',
    metric='bbox',
    format_only=False,
    backend_args=None,
    proposal_nums=(100, 1, 10))
tta_model = dict(
    type='DetTTAModel',
    tta_cfg=dict(nms=dict(type='nms', iou_threshold=0.6), max_per_img=100))
img_scales = [(640, 640), (320, 320), (960, 960)]
tta_pipeline = [
    dict(type='LoadImageFromFile', backend_args=None),
    dict(
        type='TestTimeAug',
        transforms=[[{
            'type': 'Resize',
            'scale': (640, 640),
            'keep_ratio': True
        }, {
            'type': 'Resize',
            'scale': (320, 320),
            'keep_ratio': True
        }, {
            'type': 'Resize',
            'scale': (960, 960),
            'keep_ratio': True
        }],
                    [{
                        'type': 'RandomFlip',
                        'prob': 1.0
                    }, {
                        'type': 'RandomFlip',
                        'prob': 0.0
                    }],
                    [{
                        'type': 'Pad',
                        'size': (960, 960),
                        'pad_val': {
                            'img': (114, 114, 114)
                        }
                    }],
                    [{
                        'type':
                        'PackDetInputs',
                        'meta_keys':
                        ('img_id', 'img_path', 'ori_shape', 'img_shape',
                         'scale_factor', 'flip', 'flip_direction')
                    }]])
]
model = dict(
    type='RTMDet',
    data_preprocessor=dict(
        type='DetDataPreprocessor',
        mean=[103.53, 116.28, 123.675],
        std=[57.375, 57.12, 58.395],
        bgr_to_rgb=False,
        batch_augments=None),
    backbone=dict(
        type='CSPNeXt',
        arch='P5',
        expand_ratio=0.5,
        deepen_factor=0.167,
        widen_factor=0.375,
        channel_attention=True,
        norm_cfg=dict(type='SyncBN'),
        act_cfg=dict(type='SiLU', inplace=True),
        init_cfg=dict(
            type='Pretrained',
            prefix='backbone.',
            checkpoint=
            'https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth'
        ),
        frozen_stages=4),
    neck=dict(
        type='CSPNeXtPAFPN',
        in_channels=[96, 192, 384],
        out_channels=96,
        num_csp_blocks=1,
        expand_ratio=0.5,
        norm_cfg=dict(type='SyncBN'),
        act_cfg=dict(type='SiLU', inplace=True)),
    bbox_head=dict(
        type='RTMDetSepBNHead',
        num_classes=1,
        in_channels=96,
        stacked_convs=2,
        feat_channels=96,
        anchor_generator=dict(
            type='MlvlPointGenerator', offset=0, strides=[8, 16, 32]),
        bbox_coder=dict(type='DistancePointBBoxCoder'),
        loss_cls=dict(
            type='QualityFocalLoss',
            use_sigmoid=True,
            beta=2.0,
            loss_weight=1.0),
        loss_bbox=dict(type='GIoULoss', loss_weight=2.0),
        with_objectness=False,
        exp_on_reg=False,
        share_conv=True,
        pred_kernel_size=1,
        norm_cfg=dict(type='SyncBN'),
        act_cfg=dict(type='SiLU', inplace=True)),
    train_cfg=dict(
        assigner=dict(type='DynamicSoftLabelAssigner', topk=13),
        allowed_border=-1,
        pos_weight=-1,
        debug=False),
    test_cfg=dict(
        nms_pre=30000,
        min_bbox_size=0,
        score_thr=0.001,
        nms=dict(type='nms', iou_threshold=0.65),
        max_per_img=300))
train_pipeline_stage2 = [
    dict(type='LoadImageFromFile', backend_args=None),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(
        type='RandomResize',
        scale=(640, 640),
        ratio_range=(0.5, 2.0),
        keep_ratio=True),
    dict(type='RandomCrop', crop_size=(640, 640)),
    dict(type='YOLOXHSVRandomAug'),
    dict(type='RandomFlip', prob=0.5),
    dict(type='Pad', size=(640, 640), pad_val=dict(img=(114, 114, 114))),
    dict(type='PackDetInputs')
]
max_epochs = 40
stage2_num_epochs = 20
base_lr = 0.0001875
interval = 10
custom_hooks = [
    dict(
        type='EMAHook',
        ema_type='ExpMomentumEMA',
        momentum=0.0002,
        update_buffers=True,
        priority=49),
    dict(
        type='PipelineSwitchHook',
        switch_epoch=35,
        switch_pipeline=[
            dict(type='LoadImageFromFile', backend_args=None),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(
                type='RandomResize',
                scale=(640, 640),
                ratio_range=(0.5, 2.0),
                keep_ratio=True),
            dict(type='RandomCrop', crop_size=(640, 640)),
            dict(type='YOLOXHSVRandomAug'),
            dict(type='RandomFlip', prob=0.5),
            dict(
                type='Pad', size=(640, 640),
                pad_val=dict(img=(114, 114, 114))),
            dict(type='PackDetInputs')
        ])
]
checkpoint = 'https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth'
metainfo = dict(classes=('balloon', ), palette=[(220, 20, 60)])
num_classes = 1
train_batch_size_per_gpu = 12
train_num_workers = 4
val_batch_size_per_gpu = 1
val_num_workers = 2
num_epochs_stage2 = 5
launcher = 'none'
work_dir = './work_dirs/rtmdet_tiny_1xb12-40e_balloon'

06/11 03:33:58 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
06/11 03:33:58 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(49          ) EMAHook                            
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_load_checkpoint:
(49          ) EMAHook                            
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(49          ) EMAHook                            
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
(NORMAL      ) PipelineSwitchHook                 
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(49          ) EMAHook                            
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val_epoch:
(49          ) EMAHook                            
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DetVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(49          ) EMAHook                            
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_save_checkpoint:
(49          ) EMAHook                            
 -------------------- 
after_train:
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test_epoch:
(49          ) EMAHook                            
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DetVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(49          ) EMAHook                            
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
loading annotations into memory...
Done (t=0.00s)
creating index...
index created!
06/11 03:34:00 - mmengine - INFO - paramwise_options -- backbone.stem.0.bn.weight:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- backbone.stem.0.bn.bias:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- backbone.stem.1.bn.weight:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- backbone.stem.1.bn.bias:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- backbone.stem.2.bn.weight:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- backbone.stem.2.bn.bias:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- backbone.stage1.0.bn.weight:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- backbone.stage1.0.bn.bias:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- backbone.stage1.1.main_conv.bn.weight:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- backbone.stage1.1.main_conv.bn.bias:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- backbone.stage1.1.short_conv.bn.weight:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- backbone.stage1.1.short_conv.bn.bias:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- backbone.stage1.1.final_conv.bn.weight:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- backbone.stage1.1.final_conv.bn.bias:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv1.bn.weight:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv1.bn.bias:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- backbone.stage1.1.attention.fc.bias:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- backbone.stage2.0.bn.weight:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- backbone.stage2.0.bn.bias:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- backbone.stage2.1.main_conv.bn.weight:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- backbone.stage2.1.main_conv.bn.bias:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- backbone.stage2.1.short_conv.bn.weight:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- backbone.stage2.1.short_conv.bn.bias:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- backbone.stage2.1.final_conv.bn.weight:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- backbone.stage2.1.final_conv.bn.bias:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv1.bn.weight:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv1.bn.bias:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- backbone.stage2.1.attention.fc.bias:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- backbone.stage3.0.bn.weight:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- backbone.stage3.0.bn.bias:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- backbone.stage3.1.main_conv.bn.weight:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- backbone.stage3.1.main_conv.bn.bias:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- backbone.stage3.1.short_conv.bn.weight:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- backbone.stage3.1.short_conv.bn.bias:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- backbone.stage3.1.final_conv.bn.weight:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- backbone.stage3.1.final_conv.bn.bias:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv1.bn.weight:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv1.bn.bias:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- backbone.stage3.1.attention.fc.bias:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- backbone.stage4.0.bn.weight:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- backbone.stage4.0.bn.bias:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- backbone.stage4.1.conv1.bn.weight:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- backbone.stage4.1.conv1.bn.bias:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- backbone.stage4.1.conv2.bn.weight:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- backbone.stage4.1.conv2.bn.bias:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- backbone.stage4.2.main_conv.bn.weight:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- backbone.stage4.2.main_conv.bn.bias:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- backbone.stage4.2.short_conv.bn.weight:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- backbone.stage4.2.short_conv.bn.bias:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- backbone.stage4.2.final_conv.bn.weight:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- backbone.stage4.2.final_conv.bn.bias:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv1.bn.weight:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv1.bn.bias:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- backbone.stage4.2.attention.fc.bias:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- neck.reduce_layers.0.bn.weight:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- neck.reduce_layers.0.bn.bias:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- neck.reduce_layers.1.bn.weight:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- neck.reduce_layers.1.bn.bias:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.main_conv.bn.weight:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.main_conv.bn.bias:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.short_conv.bn.weight:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.short_conv.bn.bias:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.final_conv.bn.weight:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.final_conv.bn.bias:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.blocks.0.conv1.bn.weight:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.blocks.0.conv1.bn.bias:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.main_conv.bn.weight:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.main_conv.bn.bias:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.short_conv.bn.weight:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.short_conv.bn.bias:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.final_conv.bn.weight:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.final_conv.bn.bias:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.blocks.0.conv1.bn.weight:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.blocks.0.conv1.bn.bias:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- neck.downsamples.0.bn.weight:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- neck.downsamples.0.bn.bias:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- neck.downsamples.1.bn.weight:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- neck.downsamples.1.bn.bias:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.main_conv.bn.weight:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.main_conv.bn.bias:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.short_conv.bn.weight:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.short_conv.bn.bias:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.final_conv.bn.weight:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.final_conv.bn.bias:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.blocks.0.conv1.bn.weight:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.blocks.0.conv1.bn.bias:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.main_conv.bn.weight:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.main_conv.bn.bias:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.short_conv.bn.weight:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.short_conv.bn.bias:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.final_conv.bn.weight:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.final_conv.bn.bias:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.blocks.0.conv1.bn.weight:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.blocks.0.conv1.bn.bias:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- neck.out_convs.0.bn.weight:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- neck.out_convs.0.bn.bias:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- neck.out_convs.1.bn.weight:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- neck.out_convs.1.bn.bias:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- neck.out_convs.2.bn.weight:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- neck.out_convs.2.bn.bias:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- bbox_head.cls_convs.0.0.bn.weight:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- bbox_head.cls_convs.0.0.bn.bias:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- bbox_head.cls_convs.0.1.bn.weight:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- bbox_head.cls_convs.0.1.bn.bias:weight_decay=0.0
06/11 03:34:00 - mmengine - WARNING - bbox_head.cls_convs.1.0.conv is duplicate. It is skipped since bypass_duplicate=True
06/11 03:34:00 - mmengine - INFO - paramwise_options -- bbox_head.cls_convs.1.0.bn.weight:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- bbox_head.cls_convs.1.0.bn.bias:weight_decay=0.0
06/11 03:34:00 - mmengine - WARNING - bbox_head.cls_convs.1.1.conv is duplicate. It is skipped since bypass_duplicate=True
06/11 03:34:00 - mmengine - INFO - paramwise_options -- bbox_head.cls_convs.1.1.bn.weight:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- bbox_head.cls_convs.1.1.bn.bias:weight_decay=0.0
06/11 03:34:00 - mmengine - WARNING - bbox_head.cls_convs.2.0.conv is duplicate. It is skipped since bypass_duplicate=True
06/11 03:34:00 - mmengine - INFO - paramwise_options -- bbox_head.cls_convs.2.0.bn.weight:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- bbox_head.cls_convs.2.0.bn.bias:weight_decay=0.0
06/11 03:34:00 - mmengine - WARNING - bbox_head.cls_convs.2.1.conv is duplicate. It is skipped since bypass_duplicate=True
06/11 03:34:00 - mmengine - INFO - paramwise_options -- bbox_head.cls_convs.2.1.bn.weight:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- bbox_head.cls_convs.2.1.bn.bias:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- bbox_head.reg_convs.0.0.bn.weight:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- bbox_head.reg_convs.0.0.bn.bias:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- bbox_head.reg_convs.0.1.bn.weight:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- bbox_head.reg_convs.0.1.bn.bias:weight_decay=0.0
06/11 03:34:00 - mmengine - WARNING - bbox_head.reg_convs.1.0.conv is duplicate. It is skipped since bypass_duplicate=True
06/11 03:34:00 - mmengine - INFO - paramwise_options -- bbox_head.reg_convs.1.0.bn.weight:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- bbox_head.reg_convs.1.0.bn.bias:weight_decay=0.0
06/11 03:34:00 - mmengine - WARNING - bbox_head.reg_convs.1.1.conv is duplicate. It is skipped since bypass_duplicate=True
06/11 03:34:00 - mmengine - INFO - paramwise_options -- bbox_head.reg_convs.1.1.bn.weight:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- bbox_head.reg_convs.1.1.bn.bias:weight_decay=0.0
06/11 03:34:00 - mmengine - WARNING - bbox_head.reg_convs.2.0.conv is duplicate. It is skipped since bypass_duplicate=True
06/11 03:34:00 - mmengine - INFO - paramwise_options -- bbox_head.reg_convs.2.0.bn.weight:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- bbox_head.reg_convs.2.0.bn.bias:weight_decay=0.0
06/11 03:34:00 - mmengine - WARNING - bbox_head.reg_convs.2.1.conv is duplicate. It is skipped since bypass_duplicate=True
06/11 03:34:00 - mmengine - INFO - paramwise_options -- bbox_head.reg_convs.2.1.bn.weight:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- bbox_head.reg_convs.2.1.bn.bias:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- bbox_head.rtm_cls.0.bias:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- bbox_head.rtm_cls.1.bias:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- bbox_head.rtm_cls.2.bias:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- bbox_head.rtm_reg.0.bias:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- bbox_head.rtm_reg.1.bias:weight_decay=0.0
06/11 03:34:00 - mmengine - INFO - paramwise_options -- bbox_head.rtm_reg.2.bias:weight_decay=0.0
loading annotations into memory...
Done (t=0.00s)
creating index...
index created!
loading annotations into memory...
Done (t=0.00s)
creating index...
index created!
06/11 03:34:01 - mmengine - INFO - load backbone. in model from: https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth
Loads checkpoint by http backend from path: https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth
Loads checkpoint by http backend from path: https://download.openmmlab.com/mmdetection/v3.0/rtmdet/rtmdet_tiny_8xb32-300e_coco/rtmdet_tiny_8xb32-300e_coco_20220902_112414-78e30dcc.pth
The model and loaded state dict do not match exactly

size mismatch for bbox_head.rtm_cls.0.weight: copying a param with shape torch.Size([80, 96, 1, 1]) from checkpoint, the shape in current model is torch.Size([1, 96, 1, 1]).
size mismatch for bbox_head.rtm_cls.0.bias: copying a param with shape torch.Size([80]) from checkpoint, the shape in current model is torch.Size([1]).
size mismatch for bbox_head.rtm_cls.1.weight: copying a param with shape torch.Size([80, 96, 1, 1]) from checkpoint, the shape in current model is torch.Size([1, 96, 1, 1]).
size mismatch for bbox_head.rtm_cls.1.bias: copying a param with shape torch.Size([80]) from checkpoint, the shape in current model is torch.Size([1]).
size mismatch for bbox_head.rtm_cls.2.weight: copying a param with shape torch.Size([80, 96, 1, 1]) from checkpoint, the shape in current model is torch.Size([1, 96, 1, 1]).
size mismatch for bbox_head.rtm_cls.2.bias: copying a param with shape torch.Size([80]) from checkpoint, the shape in current model is torch.Size([1]).
unexpected key in source state_dict: data_preprocessor.mean, data_preprocessor.std

The model and loaded state dict do not match exactly

size mismatch for bbox_head.rtm_cls.0.weight: copying a param with shape torch.Size([80, 96, 1, 1]) from checkpoint, the shape in current model is torch.Size([1, 96, 1, 1]).
size mismatch for bbox_head.rtm_cls.0.bias: copying a param with shape torch.Size([80]) from checkpoint, the shape in current model is torch.Size([1]).
size mismatch for bbox_head.rtm_cls.1.weight: copying a param with shape torch.Size([80, 96, 1, 1]) from checkpoint, the shape in current model is torch.Size([1, 96, 1, 1]).
size mismatch for bbox_head.rtm_cls.1.bias: copying a param with shape torch.Size([80]) from checkpoint, the shape in current model is torch.Size([1]).
size mismatch for bbox_head.rtm_cls.2.weight: copying a param with shape torch.Size([80, 96, 1, 1]) from checkpoint, the shape in current model is torch.Size([1, 96, 1, 1]).
size mismatch for bbox_head.rtm_cls.2.bias: copying a param with shape torch.Size([80]) from checkpoint, the shape in current model is torch.Size([1]).
unexpected key in source state_dict: data_preprocessor.mean, data_preprocessor.std

06/11 03:34:02 - mmengine - INFO - Load checkpoint from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/rtmdet_tiny_8xb32-300e_coco/rtmdet_tiny_8xb32-300e_coco_20220902_112414-78e30dcc.pth
06/11 03:34:02 - mmengine - WARNING - "FileClient" will be deprecated in future. Please use io functions in https://mmengine.readthedocs.io/en/latest/api/fileio.html#file-io
06/11 03:34:02 - mmengine - WARNING - "HardDiskBackend" is the alias of "LocalBackend" and the former will be deprecated in future.
06/11 03:34:02 - mmengine - INFO - Checkpoints will be saved to /data/github/openmmlab/mmdetection/work_dirs/rtmdet_tiny_1xb12-40e_balloon.
/opt/conda/lib/python3.10/site-packages/torch/functional.py:504: UserWarning: torch.meshgrid: in an upcoming release, it will be required to pass the indexing argument. (Triggered internally at /opt/conda/conda-bld/pytorch_1670525552843/work/aten/src/ATen/native/TensorShape.cpp:3190.)
  return _VF.meshgrid(tensors, **kwargs)  # type: ignore[attr-defined]
06/11 03:34:07 - mmengine - INFO - Epoch(train)  [1][5/6]  lr: 2.5864e-05  eta: 0:04:18  time: 1.0992  data_time: 0.3240  memory: 1548  loss: 2.7512  loss_cls: 2.0560  loss_bbox: 0.6952
06/11 03:34:07 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_balloon_20230611_033352
06/11 03:34:10 - mmengine - INFO - Epoch(train)  [2][5/6]  lr: 6.4656e-05  eta: 0:02:51  time: 0.7486  data_time: 0.2443  memory: 1535  loss: 2.7855  loss_cls: 2.1063  loss_bbox: 0.6792
06/11 03:34:10 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_balloon_20230611_033352
06/11 03:34:13 - mmengine - INFO - Epoch(train)  [3][5/6]  lr: 1.0345e-04  eta: 0:02:25  time: 0.6510  data_time: 0.2319  memory: 1535  loss: 2.7753  loss_cls: 2.0893  loss_bbox: 0.6860
06/11 03:34:13 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_balloon_20230611_033352
06/11 03:34:16 - mmengine - INFO - Epoch(train)  [4][5/6]  lr: 1.4224e-04  eta: 0:02:13  time: 0.6137  data_time: 0.2388  memory: 1535  loss: 2.7798  loss_cls: 2.1027  loss_bbox: 0.6771
06/11 03:34:16 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_balloon_20230611_033352
06/11 03:34:19 - mmengine - INFO - Epoch(train)  [5][5/6]  lr: 1.8103e-04  eta: 0:02:04  time: 0.5915  data_time: 0.2404  memory: 1535  loss: 2.8259  loss_cls: 2.1760  loss_bbox: 0.6498
06/11 03:34:19 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_balloon_20230611_033352
06/11 03:34:22 - mmengine - INFO - Epoch(train)  [6][5/6]  lr: 1.8750e-04  eta: 0:01:57  time: 0.5725  data_time: 0.2334  memory: 1535  loss: 2.8283  loss_cls: 2.1898  loss_bbox: 0.6385
06/11 03:34:22 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_balloon_20230611_033352
06/11 03:34:25 - mmengine - INFO - Epoch(train)  [7][5/6]  lr: 1.8750e-04  eta: 0:01:51  time: 0.5599  data_time: 0.2334  memory: 1548  loss: 2.8213  loss_cls: 2.1938  loss_bbox: 0.6275
06/11 03:34:25 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_balloon_20230611_033352
06/11 03:34:28 - mmengine - INFO - Epoch(train)  [8][5/6]  lr: 1.8750e-04  eta: 0:01:47  time: 0.5548  data_time: 0.2363  memory: 1536  loss: 2.8104  loss_cls: 2.1988  loss_bbox: 0.6117
06/11 03:34:28 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_balloon_20230611_033352
06/11 03:34:30 - mmengine - INFO - Epoch(train)  [9][5/6]  lr: 1.8750e-04  eta: 0:01:41  time: 0.4766  data_time: 0.2119  memory: 1535  loss: 2.7819  loss_cls: 2.1921  loss_bbox: 0.5899
06/11 03:34:30 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_balloon_20230611_033352
06/11 03:34:33 - mmengine - INFO - Epoch(train) [10][5/6]  lr: 1.8750e-04  eta: 0:01:37  time: 0.4848  data_time: 0.2197  memory: 1535  loss: 2.7200  loss_cls: 2.1659  loss_bbox: 0.5540
06/11 03:34:34 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_balloon_20230611_033352
06/11 03:34:34 - mmengine - INFO - Saving checkpoint at 10 epochs
06/11 03:34:36 - mmengine - INFO - Epoch(val) [10][ 5/13]    eta: 0:00:00  time: 0.1005  data_time: 0.0485  memory: 192  
06/11 03:34:36 - mmengine - INFO - Epoch(val) [10][10/13]    eta: 0:00:00  time: 0.0801  data_time: 0.0252  memory: 105  
06/11 03:34:36 - mmengine - INFO - Evaluating bbox...
Loading and preparing results...
DONE (t=0.00s)
creating index...
index created!
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=0.15s).
Accumulating evaluation results...
DONE (t=0.02s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.493
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.586
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.511
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.030
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.665
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.214
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.506
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.702
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.408
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.839
06/11 03:34:37 - mmengine - INFO - bbox_mAP_copypaste: 0.493 0.586 0.511 0.000 0.030 0.665
06/11 03:34:37 - mmengine - INFO - Epoch(val) [10][13/13]    coco/bbox_mAP: 0.4930  coco/bbox_mAP_50: 0.5860  coco/bbox_mAP_75: 0.5110  coco/bbox_mAP_s: 0.0000  coco/bbox_mAP_m: 0.0300  coco/bbox_mAP_l: 0.6650  data_time: 0.0198  time: 0.0708
06/11 03:34:39 - mmengine - INFO - The best checkpoint with 0.4930 coco/bbox_mAP at 10 epoch is saved to best_coco_bbox_mAP_epoch_10.pth.
06/11 03:34:43 - mmengine - INFO - Epoch(train) [11][5/6]  lr: 1.8750e-04  eta: 0:01:33  time: 0.4819  data_time: 0.2160  memory: 1535  loss: 2.6017  loss_cls: 2.0891  loss_bbox: 0.5127
06/11 03:34:43 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_balloon_20230611_033352
06/11 03:34:46 - mmengine - INFO - Epoch(train) [12][5/6]  lr: 1.8750e-04  eta: 0:01:29  time: 0.4797  data_time: 0.2100  memory: 1535  loss: 2.4334  loss_cls: 1.9612  loss_bbox: 0.4721
06/11 03:34:46 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_balloon_20230611_033352
06/11 03:34:49 - mmengine - INFO - Epoch(train) [13][5/6]  lr: 1.8750e-04  eta: 0:01:25  time: 0.4817  data_time: 0.2102  memory: 1535  loss: 2.2076  loss_cls: 1.7672  loss_bbox: 0.4404
06/11 03:34:49 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_balloon_20230611_033352
06/11 03:34:52 - mmengine - INFO - Epoch(train) [14][5/6]  lr: 1.8750e-04  eta: 0:01:22  time: 0.4831  data_time: 0.2142  memory: 1539  loss: 1.9842  loss_cls: 1.5811  loss_bbox: 0.4031
06/11 03:34:52 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_balloon_20230611_033352
06/11 03:34:55 - mmengine - INFO - Epoch(train) [15][5/6]  lr: 1.8750e-04  eta: 0:01:18  time: 0.4817  data_time: 0.2129  memory: 1535  loss: 1.8881  loss_cls: 1.5177  loss_bbox: 0.3704
06/11 03:34:55 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_balloon_20230611_033352
06/11 03:34:58 - mmengine - INFO - Epoch(train) [16][5/6]  lr: 1.8750e-04  eta: 0:01:14  time: 0.4782  data_time: 0.2095  memory: 1535  loss: 1.6689  loss_cls: 1.3298  loss_bbox: 0.3391
06/11 03:34:58 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_balloon_20230611_033352
06/11 03:35:00 - mmengine - INFO - Epoch(train) [17][5/6]  lr: 1.8750e-04  eta: 0:01:11  time: 0.4802  data_time: 0.2123  memory: 1535  loss: 1.4607  loss_cls: 1.1455  loss_bbox: 0.3152
06/11 03:35:01 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_balloon_20230611_033352
06/11 03:35:03 - mmengine - INFO - Epoch(train) [18][5/6]  lr: 1.8750e-04  eta: 0:01:08  time: 0.4731  data_time: 0.2098  memory: 1535  loss: 1.2913  loss_cls: 0.9890  loss_bbox: 0.3023
06/11 03:35:03 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_balloon_20230611_033352
06/11 03:35:06 - mmengine - INFO - Epoch(train) [19][5/6]  lr: 1.8750e-04  eta: 0:01:05  time: 0.4802  data_time: 0.2162  memory: 1535  loss: 1.1643  loss_cls: 0.8710  loss_bbox: 0.2933
06/11 03:35:06 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_balloon_20230611_033352
06/11 03:35:09 - mmengine - INFO - Epoch(train) [20][5/6]  lr: 1.8750e-04  eta: 0:01:01  time: 0.4795  data_time: 0.2185  memory: 1535  loss: 1.0867  loss_cls: 0.8046  loss_bbox: 0.2821
06/11 03:35:09 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_balloon_20230611_033352
06/11 03:35:09 - mmengine - INFO - Saving checkpoint at 20 epochs
06/11 03:35:11 - mmengine - INFO - Epoch(val) [20][ 5/13]    eta: 0:00:00  time: 0.0685  data_time: 0.0185  memory: 194  
06/11 03:35:12 - mmengine - INFO - Epoch(val) [20][10/13]    eta: 0:00:00  time: 0.0620  data_time: 0.0148  memory: 105  
06/11 03:35:12 - mmengine - INFO - Evaluating bbox...
Loading and preparing results...
DONE (t=0.01s)
creating index...
index created!
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=0.13s).
Accumulating evaluation results...
DONE (t=0.02s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.689
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.805
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.792
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.346
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.821
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.238
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.724
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.804
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.683
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.889
06/11 03:35:12 - mmengine - INFO - bbox_mAP_copypaste: 0.689 0.805 0.792 0.000 0.346 0.821
06/11 03:35:12 - mmengine - INFO - Epoch(val) [20][13/13]    coco/bbox_mAP: 0.6890  coco/bbox_mAP_50: 0.8050  coco/bbox_mAP_75: 0.7920  coco/bbox_mAP_s: 0.0000  coco/bbox_mAP_m: 0.3460  coco/bbox_mAP_l: 0.8210  data_time: 0.0063  time: 0.0505
06/11 03:35:12 - mmengine - INFO - The previous best checkpoint /data/github/openmmlab/mmdetection/work_dirs/rtmdet_tiny_1xb12-40e_balloon/best_coco_bbox_mAP_epoch_10.pth is removed
06/11 03:35:13 - mmengine - INFO - The best checkpoint with 0.6890 coco/bbox_mAP at 20 epoch is saved to best_coco_bbox_mAP_epoch_20.pth.
06/11 03:35:18 - mmengine - INFO - Epoch(train) [21][5/6]  lr: 1.8701e-04  eta: 0:00:58  time: 0.4703  data_time: 0.2105  memory: 1535  loss: 1.0339  loss_cls: 0.7563  loss_bbox: 0.2776
06/11 03:35:18 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_balloon_20230611_033352
06/11 03:35:21 - mmengine - INFO - Epoch(train) [22][5/6]  lr: 1.8447e-04  eta: 0:00:55  time: 0.4727  data_time: 0.2095  memory: 1536  loss: 1.0141  loss_cls: 0.7375  loss_bbox: 0.2766
06/11 03:35:21 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_balloon_20230611_033352
06/11 03:35:24 - mmengine - INFO - Epoch(train) [23][5/6]  lr: 1.7980e-04  eta: 0:00:52  time: 0.4709  data_time: 0.2081  memory: 1535  loss: 0.8707  loss_cls: 0.5950  loss_bbox: 0.2757
06/11 03:35:24 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_balloon_20230611_033352
06/11 03:35:26 - mmengine - INFO - Epoch(train) [24][5/6]  lr: 1.7313e-04  eta: 0:00:48  time: 0.4719  data_time: 0.2060  memory: 1542  loss: 0.8397  loss_cls: 0.5635  loss_bbox: 0.2762
06/11 03:35:27 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_balloon_20230611_033352
06/11 03:35:29 - mmengine - INFO - Epoch(train) [25][5/6]  lr: 1.6462e-04  eta: 0:00:45  time: 0.4680  data_time: 0.1994  memory: 1535  loss: 0.8424  loss_cls: 0.5708  loss_bbox: 0.2716
06/11 03:35:29 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_balloon_20230611_033352
06/11 03:35:32 - mmengine - INFO - Epoch(train) [26][5/6]  lr: 1.5449e-04  eta: 0:00:42  time: 0.4672  data_time: 0.1964  memory: 1535  loss: 0.8176  loss_cls: 0.5526  loss_bbox: 0.2651
06/11 03:35:32 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_balloon_20230611_033352
06/11 03:35:35 - mmengine - INFO - Epoch(train) [27][5/6]  lr: 1.4297e-04  eta: 0:00:39  time: 0.4633  data_time: 0.1936  memory: 1535  loss: 0.8252  loss_cls: 0.5546  loss_bbox: 0.2706
06/11 03:35:35 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_balloon_20230611_033352
06/11 03:35:38 - mmengine - INFO - Epoch(train) [28][5/6]  lr: 1.3035e-04  eta: 0:00:36  time: 0.4675  data_time: 0.1965  memory: 1535  loss: 0.8191  loss_cls: 0.5438  loss_bbox: 0.2752
06/11 03:35:38 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_balloon_20230611_033352
06/11 03:35:41 - mmengine - INFO - Epoch(train) [29][5/6]  lr: 1.1695e-04  eta: 0:00:33  time: 0.4761  data_time: 0.2045  memory: 1535  loss: 0.8221  loss_cls: 0.5455  loss_bbox: 0.2766
06/11 03:35:41 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_balloon_20230611_033352
06/11 03:35:44 - mmengine - INFO - Epoch(train) [30][5/6]  lr: 1.0310e-04  eta: 0:00:30  time: 0.4741  data_time: 0.2043  memory: 1535  loss: 0.8097  loss_cls: 0.5418  loss_bbox: 0.2680
06/11 03:35:44 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_balloon_20230611_033352
06/11 03:35:44 - mmengine - INFO - Saving checkpoint at 30 epochs
06/11 03:35:46 - mmengine - INFO - Epoch(val) [30][ 5/13]    eta: 0:00:00  time: 0.0634  data_time: 0.0180  memory: 194  
06/11 03:35:46 - mmengine - INFO - Epoch(val) [30][10/13]    eta: 0:00:00  time: 0.0589  data_time: 0.0161  memory: 105  
06/11 03:35:46 - mmengine - INFO - Evaluating bbox...
Loading and preparing results...
DONE (t=0.01s)
creating index...
index created!
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=0.15s).
Accumulating evaluation results...
DONE (t=0.02s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.697
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.792
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.776
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.231
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.864
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.250
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.732
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.814
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.633
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.919
06/11 03:35:47 - mmengine - INFO - bbox_mAP_copypaste: 0.697 0.792 0.776 0.000 0.231 0.864
06/11 03:35:47 - mmengine - INFO - Epoch(val) [30][13/13]    coco/bbox_mAP: 0.6970  coco/bbox_mAP_50: 0.7920  coco/bbox_mAP_75: 0.7760  coco/bbox_mAP_s: 0.0000  coco/bbox_mAP_m: 0.2310  coco/bbox_mAP_l: 0.8640  data_time: 0.0171  time: 0.0458
06/11 03:35:47 - mmengine - INFO - The previous best checkpoint /data/github/openmmlab/mmdetection/work_dirs/rtmdet_tiny_1xb12-40e_balloon/best_coco_bbox_mAP_epoch_20.pth is removed
06/11 03:35:48 - mmengine - INFO - The best checkpoint with 0.6970 coco/bbox_mAP at 30 epoch is saved to best_coco_bbox_mAP_epoch_30.pth.
06/11 03:35:53 - mmengine - INFO - Epoch(train) [31][5/6]  lr: 8.9128e-05  eta: 0:00:27  time: 0.4730  data_time: 0.2034  memory: 1535  loss: 0.7985  loss_cls: 0.5327  loss_bbox: 0.2657
06/11 03:35:53 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_balloon_20230611_033352
06/11 03:35:56 - mmengine - INFO - Epoch(train) [32][5/6]  lr: 7.5386e-05  eta: 0:00:24  time: 0.4805  data_time: 0.2089  memory: 1535  loss: 0.8030  loss_cls: 0.5393  loss_bbox: 0.2637
06/11 03:35:56 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_balloon_20230611_033352
06/11 03:35:59 - mmengine - INFO - Epoch(train) [33][5/6]  lr: 6.2213e-05  eta: 0:00:21  time: 0.4857  data_time: 0.2147  memory: 1535  loss: 0.7727  loss_cls: 0.5114  loss_bbox: 0.2613
06/11 03:35:59 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_balloon_20230611_033352
06/11 03:36:02 - mmengine - INFO - Epoch(train) [34][5/6]  lr: 4.9931e-05  eta: 0:00:18  time: 0.4896  data_time: 0.2211  memory: 1535  loss: 0.7710  loss_cls: 0.5081  loss_bbox: 0.2629
06/11 03:36:02 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_balloon_20230611_033352
06/11 03:36:05 - mmengine - INFO - Epoch(train) [35][5/6]  lr: 3.8843e-05  eta: 0:00:15  time: 0.4921  data_time: 0.2264  memory: 1535  loss: 0.7228  loss_cls: 0.4755  loss_bbox: 0.2473
06/11 03:36:05 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_balloon_20230611_033352
06/11 03:36:05 - mmengine - INFO - Switch pipeline now!
06/11 03:36:07 - mmengine - INFO - Epoch(train) [36][5/6]  lr: 2.9223e-05  eta: 0:00:12  time: 0.4772  data_time: 0.2143  memory: 1535  loss: 0.7003  loss_cls: 0.4647  loss_bbox: 0.2356
06/11 03:36:07 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_balloon_20230611_033352
06/11 03:36:09 - mmengine - INFO - Epoch(train) [37][5/6]  lr: 2.1307e-05  eta: 0:00:09  time: 0.4561  data_time: 0.1950  memory: 1535  loss: 0.6843  loss_cls: 0.4626  loss_bbox: 0.2217
06/11 03:36:09 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_balloon_20230611_033352
06/11 03:36:12 - mmengine - INFO - Epoch(train) [38][5/6]  lr: 1.5290e-05  eta: 0:00:06  time: 0.4398  data_time: 0.1787  memory: 1535  loss: 0.6762  loss_cls: 0.4619  loss_bbox: 0.2143
06/11 03:36:12 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_balloon_20230611_033352
06/11 03:36:14 - mmengine - INFO - Epoch(train) [39][5/6]  lr: 1.1321e-05  eta: 0:00:03  time: 0.4265  data_time: 0.1668  memory: 1535  loss: 0.6545  loss_cls: 0.4515  loss_bbox: 0.2030
06/11 03:36:14 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_balloon_20230611_033352
06/11 03:36:16 - mmengine - INFO - Epoch(train) [40][5/6]  lr: 9.4971e-06  eta: 0:00:00  time: 0.4077  data_time: 0.1527  memory: 1535  loss: 0.6198  loss_cls: 0.4284  loss_bbox: 0.1914
06/11 03:36:16 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_balloon_20230611_033352
06/11 03:36:16 - mmengine - INFO - Saving checkpoint at 40 epochs
06/11 03:36:18 - mmengine - INFO - Epoch(val) [40][ 5/13]    eta: 0:00:00  time: 0.0558  data_time: 0.0147  memory: 191  
06/11 03:36:18 - mmengine - INFO - Epoch(val) [40][10/13]    eta: 0:00:00  time: 0.0542  data_time: 0.0134  memory: 105  
06/11 03:36:18 - mmengine - INFO - Evaluating bbox...
Loading and preparing results...
DONE (t=0.01s)
creating index...
index created!
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=0.13s).
Accumulating evaluation results...
DONE (t=0.02s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.705
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.823
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.781
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.243
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.859
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.244
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.734
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.800
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.625
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.903
06/11 03:36:19 - mmengine - INFO - bbox_mAP_copypaste: 0.705 0.823 0.781 0.000 0.243 0.859
06/11 03:36:19 - mmengine - INFO - Epoch(val) [40][13/13]    coco/bbox_mAP: 0.7050  coco/bbox_mAP_50: 0.8230  coco/bbox_mAP_75: 0.7810  coco/bbox_mAP_s: 0.0000  coco/bbox_mAP_m: 0.2430  coco/bbox_mAP_l: 0.8590  data_time: 0.0055  time: 0.0409
06/11 03:36:19 - mmengine - INFO - The previous best checkpoint /data/github/openmmlab/mmdetection/work_dirs/rtmdet_tiny_1xb12-40e_balloon/best_coco_bbox_mAP_epoch_30.pth is removed
06/11 03:36:20 - mmengine - INFO - The best checkpoint with 0.7050 coco/bbox_mAP at 40 epoch is saved to best_coco_bbox_mAP_epoch_40.pth.
